{"ast":null,"code":"var _jsxFileName = \"/Users/abdullahmehedi_/Documents/GitHub/Fitness-Tracker/src/pages/Stats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Topbar from \"../Topbar\";\nimport \"./Stats.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Stats = ({\n  dataByDate,\n  setDataByDate,\n  statsPageExercise,\n  date\n}) => {\n  _s();\n  const [weight, setWeight] = useState(\"\");\n  const [sets, setSets] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const dateString = new Date(date + \"T00:00:00\").toDateString();\n  const navigate = useNavigate();\n  const exercises = dataByDate[dateString];\n  const selectedExercise = exercises.find(exercise => exercise.name === statsPageExercise);\n  useEffect(() => {\n    setNotes(selectedExercise.notes);\n    setReps(selectedExercise.reps);\n    setWeight(selectedExercise.weight);\n    setSets(selectedExercise.sets);\n  }, [selectedExercise]);\n  function onCancelClicked() {\n    navigate(\"/Workouts\");\n  }\n  function onSaveClicked() {\n    const sDataByDate = dataByDate;\n    const workouts = sDataByDate[dateString];\n    sDataByDate[date] = workouts.map(exercise => {\n      if (exercise.name === statsPageExercise) {\n        exercise.weight = Number(weight);\n        exercise.reps = Number(reps);\n        exercise.sets = Number(sets);\n        exercise.notes = notes;\n      }\n      return exercise;\n    });\n    setDataByDate(sDataByDate);\n    navigate(\"/Workouts\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats_container\",\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {\n      name: \"My Stats\",\n      back: \"Workouts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"s_exercise_info_date\",\n      children: dateString\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"s_exercise_stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s_exercise_name\",\n        children: statsPageExercise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s_weight_stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Weight:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"s_weight_input\",\n          type: \"text\",\n          value: weight,\n          onChange: e => setWeight(e.target.value),\n          placeholder: \"Weight(lbs)\",\n          minLength: 1,\n          maxLength: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"lbs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s_set_stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Sets:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"s_set_input\",\n          type: \"text\",\n          value: sets,\n          onChange: e => setSets(e.target.value),\n          placeholder: \"Sets..\",\n          minLength: 1,\n          maxLength: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s_rep_stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Reps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"s_rep_input\",\n          type: \"text\",\n          value: reps,\n          onChange: e => setReps(e.target.value),\n          placeholder: \"Reps..\",\n          minLength: 1,\n          maxLength: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s_notes_stat\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Notes:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"s_notes_input\",\n          value: notes,\n          onChange: e => setNotes(e.target.value),\n          placeholder: \"Notes..\",\n          rows: 4 // Set the number of visible rows\n          ,\n          cols: 20 // Set the number of visible columns\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"s_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"s_cancel_button\",\n          onClick: onCancelClicked,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"s_save-button\",\n          onClick: onSaveClicked,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Stats, \"G4SEXI+X/rOhvqUPhGXN2zgOkzI=\", false, function () {\n  return [useNavigate];\n});\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","Topbar","jsxDEV","_jsxDEV","Stats","dataByDate","setDataByDate","statsPageExercise","date","_s","weight","setWeight","sets","setSets","reps","setReps","notes","setNotes","dateString","Date","toDateString","navigate","exercises","selectedExercise","find","exercise","name","onCancelClicked","onSaveClicked","sDataByDate","workouts","map","Number","className","children","back","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","minLength","maxLength","rows","cols","onClick","_c","$RefreshReg$"],"sources":["/Users/abdullahmehedi_/Documents/GitHub/Fitness-Tracker/src/pages/Stats.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Topbar from \"../Topbar\";\nimport \"./Stats.css\";\n\nconst Stats = ({ dataByDate, setDataByDate, statsPageExercise, date }) => {\n  const [weight, setWeight] = useState(\"\");\n  const [sets, setSets] = useState(\"\");\n  const [reps, setReps] = useState(\"\");\n  const [notes, setNotes] = useState(\"\");\n  const dateString = new Date(date + \"T00:00:00\").toDateString();\n\n  const navigate = useNavigate();\n  const exercises = dataByDate[dateString];\n  const selectedExercise = exercises.find(\n    (exercise) => exercise.name === statsPageExercise\n  );\n\n  useEffect(() => {\n    setNotes(selectedExercise.notes);\n    setReps(selectedExercise.reps);\n    setWeight(selectedExercise.weight);\n    setSets(selectedExercise.sets);\n  }, [selectedExercise]);\n\n  function onCancelClicked() {\n    navigate(\"/Workouts\");\n  }\n\n  function onSaveClicked() {\n    const sDataByDate = dataByDate;\n\n    const workouts = sDataByDate[dateString];\n\n    sDataByDate[date] = workouts.map((exercise) => {\n      if (exercise.name === statsPageExercise) {\n        exercise.weight = Number(weight);\n        exercise.reps = Number(reps);\n        exercise.sets = Number(sets);\n        exercise.notes = notes;\n      }\n      return exercise;\n    });\n\n    setDataByDate(sDataByDate);\n\n    navigate(\"/Workouts\");\n  }\n\n  return (\n    <div className=\"stats_container\">\n      <Topbar name=\"My Stats\" back=\"Workouts\" />\n      <div className=\"s_exercise_info_date\">{dateString}</div>\n\n      <div className=\"s_exercise_stats\">\n        <div className=\"s_exercise_name\">{statsPageExercise}</div>\n        <div className=\"s_weight_stat\">\n          <label>Weight:</label>\n          <input\n            className=\"s_weight_input\"\n            type=\"text\"\n            value={weight}\n            onChange={(e) => setWeight(e.target.value)}\n            placeholder=\"Weight(lbs)\"\n            minLength={1}\n            maxLength={3}\n          />\n          <label>lbs</label>\n        </div>\n\n        <div className=\"s_set_stat\">\n          <label>Sets:</label>\n          <input\n            className=\"s_set_input\"\n            type=\"text\"\n            value={sets}\n            onChange={(e) => setSets(e.target.value)}\n            placeholder=\"Sets..\"\n            minLength={1}\n            maxLength={3}\n          />\n        </div>\n\n        <div className=\"s_rep_stat\">\n          <label>Reps:</label>\n          <input\n            className=\"s_rep_input\"\n            type=\"text\"\n            value={reps}\n            onChange={(e) => setReps(e.target.value)}\n            placeholder=\"Reps..\"\n            minLength={1}\n            maxLength={3}\n          />\n        </div>\n\n        <div className=\"s_notes_stat\">\n          <label>Notes:</label>\n          <textarea\n            className=\"s_notes_input\"\n            value={notes}\n            onChange={(e) => setNotes(e.target.value)}\n            placeholder=\"Notes..\"\n            rows={4} // Set the number of visible rows\n            cols={20} // Set the number of visible columns\n          />\n        </div>\n        <div className=\"s_buttons\">\n          <button className=\"s_cancel_button\" onClick={onCancelClicked}>\n            Cancel\n          </button>\n          <button className=\"s_save-button\" onClick={onSaveClicked}>\n            Save\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Stats;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}